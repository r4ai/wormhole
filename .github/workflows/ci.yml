name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  covector-status:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: checkout the repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          fetch-depth: 0 # required for use of git history
      - name: install pnpm
        run: corepack enable
      - name: install Node.js
        uses: actions/setup-node@1a4442cacd436585916779262731d5b162bc6ec7 # v3
        with:
          node-version-file: .tool-versions
          cache: pnpm
          registry-url: https://registry.npmjs.org
      - name: covector status
        uses: jbolda/covector/packages/action@77aeeacf85d994c6f9316354a8148c9b675d4f5d # covector-v0.12
        id: covector
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          command: "status"
          comment: true

  biome-check:
    runs-on: ubuntu-latest
    steps:
      - name: checkout the repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - name: install pnpm
        run: corepack enable
      - name: install Node.js
        uses: actions/setup-node@1a4442cacd436585916779262731d5b162bc6ec7 # v3
        with:
          node-version-file: .tool-versions
          cache: pnpm
          registry-url: https://registry.npmjs.org
      - name: install dependencies
        run: pnpm install --frozen-lockfile
      - name: check the biome
        run: pnpm biome ci

  packages-build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout the repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - name: install pnpm
        run: corepack enable
      - name: install Node.js
        uses: actions/setup-node@1a4442cacd436585916779262731d5b162bc6ec7 # v3
        with:
          node-version-file: .tool-versions
          cache: pnpm
          registry-url: https://registry.npmjs.org
      - name: install dependencies
        run: pnpm install --frozen-lockfile
      - name: build the packages
        run: pnpm turbo build

  packages-test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout the repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - name: install pnpm
        run: corepack enable
      - name: install Node.js
        uses: actions/setup-node@1a4442cacd436585916779262731d5b162bc6ec7 # v3
        with:
          node-version-file: .tool-versions
          cache: pnpm
          registry-url: https://registry.npmjs.org
      - name: install dependencies
        run: pnpm install --frozen-lockfile
      - name: test the packages
        run: pnpm turbo test

  tauri-build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest" # for Intel based macs.
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-22.04"
            args: ""
          - platform: "windows-latest"
            args: ""
    runs-on: ${{ matrix.platform }}
    steps:
      - name: checkout the repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - name: install pnpm
        run: corepack enable
      - name: install Node.js
        uses: actions/setup-node@1a4442cacd436585916779262731d5b162bc6ec7 # v3
        with:
          node-version-file: .tool-versions
          cache: pnpm
          registry-url: https://registry.npmjs.org
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}
      - name: cache the Rust target directory
        uses: swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2
        with:
          workspaces: './src-tauri -> target'
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
      - name: install frontend dependencies
        run: pnpm install --frozen-lockfile
      - name: build the app
        uses: tauri-apps/tauri-action@4ec5841d83495da72c665daa556e6f231b89ae06 # v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: ${{ matrix.args }}
